---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: infra
  namespace: {{ .Release.Namespace  }}
  # Finalizer that ensures that project is not deleted until it is not referenced by any application
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  description: Infrastructure components
  clusterResourceWhitelist:
  - group: "*"
    kind: "*"
  # Allow manifests to deploy from any Git repos
  sourceRepos:
    - "*"
  # Only permit applications to deploy to the guestbook namespace in the same cluster
  destinations:
    - namespace: "*"
      server: https://kubernetes.default.svc
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: root
  namespace: {{ .Release.Namespace  }}
spec:
  destination:
    namespace: {{ .Release.Namespace  }}
    server: https://kubernetes.default.svc
  project: infra
  source:
    path: {{ .Values.bootstrap.repo_path }}
    targetRevision: {{ .Values.bootstrap.repo_branch }}
    directory:
      recurse: true
    repoURL: {{ .Values.bootstrap.repo_url }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: -1 # number of failed sync attempt retries; unlimited number of attempts if less than 0
      backoff:
        duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
        factor: 2 # a factor to multiply the base duration after each failed retry
        maxDuration: 10m # the maximum amount of time allowed for the backoff strategy
---
apiVersion: "networking.k8s.io/v1"
kind: Ingress
metadata:
  name: argocd-server
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - {{ .Values.ingress.host }}
      secretName: argo-tls-secret
  rules:
    - http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  name: http
      host: {{ .Values.ingress.host }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: bluegreen-demo
  labels:
    app: bluegreen-demo
spec:
  replicas: 3
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: bluegreen-demo
  template:
    metadata:
      labels:
        app: bluegreen-demo
    spec:
      containers:
      - name: bluegreen-demo
        image: argoproj/rollouts-demo:blue
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
          requests:
            memory: 32Mi
            cpu: 5m
  strategy:
    blueGreen:
      autoPromotionEnabled: false
      activeService: bluegreen-demo
      previewService: bluegreen-demo-preview